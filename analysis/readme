===== Dependency ======
Install pyMongo 

with pip: 
pip install pymongo
pip install --upgrade pymongo

with easy_install
easy_install pymongo
easy_install -U pymongo

==== Data cleaning ====
1. Cleanning:
 - get only the valid userids and valid experiment period
 - Remove items related to removed items (immediate items of same tab, same url)
 - Also remove items related to a certain taskid

run clean.py to create a clean dataset: db_tasklog_clean

Note: the items are not physically removed from the db, but marked as "removed:
True", and their information such as details and urls are removed.

2. Label propagation: labelPropagation.py

- assign task labels to non-anchor events
- identify different types of link_clicks, tab-search, and identify tab-load of SERPs
- output stored in db: data_labeled

[{userid: userid, 
  data: 
 [{'index': index_of_tabgroup,
    'tabid': tabid,
    'tab_group': [{
            'url': url_of_urlgroup,
            'url_group': url_group
        }...]
    } ...]
},]
where a url group contains consecutive events sharing the same url,
and a tab group contains consecutive events sharing the same tab

==== Outputs ====
manual/userTasks.py > tasklist.txt

==== Manual analysis ====
Data preperation for manual analysis


==== Notebook scripts ====
* For the purpose of testing and exploration
under ./notebook/
run
jupyter notebook

Exploration scripts:
- DescriptiveStats: descriptive stats of the user data
- TaskViewPostQ: answer distribution of postQ
- LabelPropagation-exploration: exploring ways to propagate labels from answer events
  to all events
- LabelPropagation: implement the selected strategy for label propagation

==== Extract patterns  ====



